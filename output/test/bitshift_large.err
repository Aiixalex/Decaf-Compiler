output prefix: llvm/test/bitshift_large
llvmas: /usr/lib/llvm-7/bin/llvm-as
llc: /usr/lib/llvm-7/bin/llc
cc: clang
codegen: /home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decafcomp
stdlib: /home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decaf-stdlib.c
generating llvm code:/home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decafcomp ... ok
; ModuleID = 'bitshift_large'
source_filename = "DecafComp"

@globalstring = private unnamed_addr constant [2 x i8] c"\0A\00"
@globalstring.1 = private unnamed_addr constant [2 x i8] c"\0A\00"

declare void @print_int(i32)

declare void @print_string(i8*)

define i1 @main() {
entry:
  %_ = alloca i32
  store i32 0, i32* %_
  %__ = alloca i32
  store i32 0, i32* %__
  %___ = alloca i32
  store i32 0, i32* %___
  store i32 4, i32* %_
  store i32 2, i32* %__
  %_1 = load i32, i32* %_
  %__2 = load i32, i32* %__
  %rstmp = lshr i32 %_1, %__2
  store i32 %rstmp, i32* %___
  %___3 = load i32, i32* %___
  %lstmp = shl i32 %___3, 30
  call void @print_int(i32 %lstmp)
  call void @print_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @globalstring, i32 0, i32 0))
  %___4 = load i32, i32* %___
  %lstmp5 = shl i32 %___4, 31
  call void @print_int(i32 %lstmp5)
  call void @print_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @globalstring.1, i32 0, i32 0))
  ret i1 false
  ret i1 false
}
assembling to bitcode:/usr/lib/llvm-7/bin/llvm-as "llvm/test/bitshift_large.llvm" -o "llvm/test/bitshift_large.llvm.bc" ... ok
converting to native code:/usr/lib/llvm-7/bin/llc "llvm/test/bitshift_large.llvm.bc" -o "llvm/test/bitshift_large.llvm.s" ... ok
linking:clang -o "llvm/test/bitshift_large.llvm.exec" "llvm/test/bitshift_large.llvm.s" "/home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decaf-stdlib.c" ... ok
running:llvm/test/bitshift_large.llvm.exec ... ok
