output prefix: llvm/dev/intmethod
llvmas: /usr/lib/llvm-7/bin/llvm-as
llc: /usr/lib/llvm-7/bin/llc
cc: clang
codegen: /home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decafcomp
stdlib: /home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decaf-stdlib.c
generating llvm code:/home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decafcomp ... ok
; ModuleID = 'Test'
source_filename = "DecafComp"

declare void @print_int(i32)

define i32 @test(i32 %a) {
entry:
  %a1 = alloca i32
  store i32 %a, i32* %a1
  %x = alloca i32
  store i32 0, i32* %x
  store i32 1, i32* %x
  %x2 = load i32, i32* %x
  call void @print_int(i32 %x2)
  ret i32 0
}

define i32 @main() {
entry:
  %x = alloca i32
  store i32 0, i32* %x
  store i32 1, i32* %x
  %x1 = load i32, i32* %x
  call void @print_int(i32 %x1)
  ret i32 0
}
assembling to bitcode:/usr/lib/llvm-7/bin/llvm-as "llvm/dev/intmethod.llvm" -o "llvm/dev/intmethod.llvm.bc" ... ok
converting to native code:/usr/lib/llvm-7/bin/llc "llvm/dev/intmethod.llvm.bc" -o "llvm/dev/intmethod.llvm.s" ... ok
linking:clang -o "llvm/dev/intmethod.llvm.exec" "llvm/dev/intmethod.llvm.s" "/home/alex_wang_10/repos/cmpt379-1207-ywa340/decafcomp/answer/decaf-stdlib.c" ... ok
running:llvm/dev/intmethod.llvm.exec ... ok
