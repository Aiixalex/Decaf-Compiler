; ModuleID = 'byone'
source_filename = "DecafComp"

@globalstring = private unnamed_addr constant [4 x i8] c",\0D\0A\00"
@globalstring.1 = private unnamed_addr constant [7 x i8] c"hello\0A\00"
@globalstring.2 = private unnamed_addr constant [4 x i8] c",\0D\0A\00"

declare void @print_string(i8*)

declare void @print_int(i32)

define i32 @i(i32 %i) {
entry:
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %i2 = alloca i32
  store i32 0, i32* %i2
  store i32 0, i32* %i2
  br label %ifstart

ifstart:                                          ; preds = %entry
  %i3 = load i32, i32* %i2
  %gttmp = icmp sgt i32 2, %i3
  br i1 %gttmp, label %iftrue, label %iffalse

iftrue:                                           ; preds = %ifstart
  %i4 = alloca i32
  store i32 0, i32* %i4
  store i32 2, i32* %i4
  br label %iffalse

iffalse:                                          ; preds = %iftrue, %ifstart
  br label %ifstart5

ifstart5:                                         ; preds = %iffalse
  %i8 = load i32, i32* %i2
  %lttmp = icmp slt i32 2, %i8
  br i1 %lttmp, label %iftrue6, label %iffalse7

iftrue6:                                          ; preds = %ifstart5
  br label %end

iffalse7:                                         ; preds = %ifstart5
  %i9 = alloca i32
  store i32 0, i32* %i9
  store i32 6, i32* %i9
  br label %end

end:                                              ; preds = %iffalse7, %iftrue6
  %i10 = load i32, i32* %i2
  call void @print_int(i32 %i10)
  call void @print_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @globalstring, i32 0, i32 0))
  ret i32 0
  ret i32 0
}

define i32 @main() {
entry:
  %i = alloca i32
  store i32 0, i32* %i
  call void @print_string(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @globalstring.1, i32 0, i32 0))
  store i32 0, i32* %i
  br label %ifstart

ifstart:                                          ; preds = %entry
  %i1 = load i32, i32* %i
  %gttmp = icmp sgt i32 2, %i1
  br i1 %gttmp, label %iftrue, label %iffalse

iftrue:                                           ; preds = %ifstart
  %i2 = alloca i32
  store i32 0, i32* %i2
  store i32 2, i32* %i2
  br label %iffalse

iffalse:                                          ; preds = %iftrue, %ifstart
  br label %ifstart3

ifstart3:                                         ; preds = %iffalse
  %i6 = load i32, i32* %i
  %lttmp = icmp slt i32 2, %i6
  br i1 %lttmp, label %iftrue4, label %iffalse5

iftrue4:                                          ; preds = %ifstart3
  br label %end

iffalse5:                                         ; preds = %ifstart3
  %i7 = alloca i32
  store i32 0, i32* %i7
  store i32 6, i32* %i7
  br label %end

end:                                              ; preds = %iffalse5, %iftrue4
  %i8 = load i32, i32* %i
  call void @print_int(i32 %i8)
  call void @print_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @globalstring.2, i32 0, i32 0))
  ret i32 0
}
